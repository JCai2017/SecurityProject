digraph "CFG for 'stbtt_FindMatchingFont' function" {
	label="CFG for 'stbtt_FindMatchingFont' function";

	Node0x2a5d600 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i8*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8\l  store i8* %1, i8** %6, align 8\l  store i32 %2, i32* %7, align 4\l  store i32 0, i32* %8, align 4\l  br label %10\l}"];
	Node0x2a5d600 -> Node0x2a5d6c0;
	Node0x2a5d6c0 [shape=record,label="{%10:\l\l  %11 = load i8*, i8** %5, align 8\l  %12 = load i32, i32* %8, align 4\l  %13 = call i32 @stbtt_GetFontOffsetForIndex(i8* %11, i32 %12)\l  store i32 %13, i32* %9, align 4\l  %14 = load i32, i32* %9, align 4\l  %15 = icmp slt i32 %14, 0\l  br i1 %15, label %16, label %18\l|{<s0>T|<s1>F}}"];
	Node0x2a5d6c0:s0 -> Node0x2a60020;
	Node0x2a5d6c0:s1 -> Node0x2a60070;
	Node0x2a60020 [shape=record,label="{%16:\l\l  %17 = load i32, i32* %9, align 4\l  store i32 %17, i32* %4, align 4\l  br label %31\l}"];
	Node0x2a60020 -> Node0x2a60320;
	Node0x2a60070 [shape=record,label="{%18:\l\l  %19 = load i8*, i8** %5, align 8\l  %20 = load i32, i32* %9, align 4\l  %21 = load i8*, i8** %6, align 8\l  %22 = load i32, i32* %7, align 4\l  %23 = call i32 @stbtt__matches(i8* %19, i32 %20, i8* %21, i32 %22)\l  %24 = icmp ne i32 %23, 0\l  br i1 %24, label %25, label %27\l|{<s0>T|<s1>F}}"];
	Node0x2a60070:s0 -> Node0x2a60800;
	Node0x2a60070:s1 -> Node0x2a60850;
	Node0x2a60800 [shape=record,label="{%25:\l\l  %26 = load i32, i32* %9, align 4\l  store i32 %26, i32* %4, align 4\l  br label %31\l}"];
	Node0x2a60800 -> Node0x2a60320;
	Node0x2a60850 [shape=record,label="{%27:\l\l  br label %28\l}"];
	Node0x2a60850 -> Node0x2a60ab0;
	Node0x2a60ab0 [shape=record,label="{%28:\l\l  %29 = load i32, i32* %8, align 4\l  %30 = add nsw i32 %29, 1\l  store i32 %30, i32* %8, align 4\l  br label %10\l}"];
	Node0x2a60ab0 -> Node0x2a5d6c0;
	Node0x2a60320 [shape=record,label="{%31:\l\l  %32 = load i32, i32* %4, align 4\l  ret i32 %32\l}"];
}
